# Generated by Django 3.2.2 on 2021-05-11 18:16

import ckeditor.fields
import core.fields
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Имя')),
                ('slug', core.fields.AutoSlugField(populate_from='name', unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Сортировка')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='courses.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Онлайн'), (2, 'Оффлайн')], default=1, verbose_name='Тип')),
                ('difficulty', models.PositiveIntegerField(choices=[(1, 'С нуля'), (2, 'Продвинутый')], default=1, verbose_name='Уровень сложности')),
                ('price', models.PositiveIntegerField(choices=[(1, 'Бесплатно'), (2, 'Низкая цена'), (3, 'Средняя цена'), (4, 'Высокая цена')], default=3, verbose_name='Цена ₽')),
                ('duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Длительность, мес.')),
                ('start_anytime', models.BooleanField(default=False, verbose_name='Можно начать в любое время')),
                ('installment', models.BooleanField(default=False, verbose_name='Возможна рассрочка')),
                ('deferred_payment', models.BooleanField(default=False, verbose_name='Возможен отложенный платёж')),
                ('advantages', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Преимущества')),
                ('target_audience', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Кому подойдёт')),
                ('learning_outcomes', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Чему вы научитесь')),
                ('learning_process', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Как проходит обучение')),
                ('support', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Поддержка во время обучения')),
                ('employment_assistance', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Помощь в трудоустройстве')),
                ('syllabus', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Программа курса')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.category')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
            ],
            options={
                'db_table': 'course_category',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ManyToManyField(through='courses.CourseCategory', to='courses.Category', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='course',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school', verbose_name='Школа'),
        ),
    ]
